body {
    margin: 0;
    display: flex;
    height: 100vh;
    justify-content: center;
    align-items: center;
    background: #333;
}

:root {
    --face-depth: 40px; /* Depth of cube faces */
    --face-size: 26px; /* Size of cube faces */
    --cube-size: 80px; /* Size of the cube */
    --perspective: 200px; /* Perspective for 3D */
    --rotation-90: 90deg; /* Rotation angle for 90 degrees */
    --rotation-180: 180deg; /* Rotation angle for 180 degrees */
}

.scene {
    width: var(--cube-size);
    height: var(--cube-size);
    perspective: var(--perspective);
}

.cube {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    animation: rotateCube 10s infinite linear;
}

.face {
    position: absolute;
    width: var(--face-size);
    height: var(--face-size);
    background-color: transparent;
    border: 1px solid #fff;
}

/* Define common transformation for each face */
.face_front { transform: translateZ(var(--face-depth)); }
.face_back { transform: rotateY(var(--rotation-180)) translateZ(var(--face-depth)); }
.face_right { transform: rotateY(var(--rotation-90)) translateZ(var(--face-depth)); }
.face_left { transform: rotateY(calc(-1 * var(--rotation-90))) translateZ(var(--face-depth)); }
.face_top { transform: rotateX(var(--rotation-90)) translateZ(var(--face-depth)); }
.face_bottom { transform: rotateX(calc(-1 * var(--rotation-90))) translateZ(var(--face-depth)); }

@keyframes rotateCube {
    0% { transform: rotateX(0deg) rotateY(0deg); }
    100% { transform: rotateX(360deg) rotateY(360deg); }
}
